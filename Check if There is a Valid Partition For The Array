class Solution {
    bool Helper(int i,vector<int>&nums,vector<int>&dp,int n){
        if(i==n) return true;
        if(i==(n-1)) return false;
        if(dp[i]!=-1) return dp[i];
        bool ans=false;
         if(nums[i]==nums[i+1])
         {
             ans=Helper(i+2,nums,dp,n);
              if(((i+2)<nums.size())&&(nums[i+2]==nums[i]))
              {
                   bool k=Helper(i+3,nums,dp,n);
                  
                  if(k)
                    ans=k;
              }
         }
        else
        {
         if((i+2)<nums.size())
             {
                  if((nums[i]==(nums[i+1]-1))&&(nums[i]==(nums[i+2]-2)))
                       ans=Helper(i+3,nums,dp,n);
             }
                 
        }
        return dp[i]=ans;
    }
public:
    bool validPartition(vector<int>& nums) {
        int n=nums.size();
        vector<int>dp(n+1,-1);
        return Helper(0,nums,dp,n);
    }
};
